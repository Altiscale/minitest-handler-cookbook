{"name":"Minitest-handler-cookbook","body":"Cookbook: minitest-handler  \r\nAuthor: Bryan McLellan <btm@loftninjas.org>  \r\nAuthor: Bryan W. Berry <bryan.berry@gmail.com>\r\nCopyright: 2012 Opscode, Inc.  \r\nLicense: Apache 2.0  \r\n\r\nDescription\r\n===========\r\n\r\nThis cookbook utilizes the minitest-chef-handler project to facilitate cookbook testing.\r\n\r\nminitest-chef-handler project: https://github.com/calavera/minitest-chef-handler  \r\nstable minitest-handler cookbook: http://community.opscode.com/cookbooks/minitest-handler  \r\nminitest-handler cookbook development: https://github.com/btm/minitest-handler-cookbook  \r\n\r\nAttributes\r\n==========\r\n\r\nnode[:minitest][:path] - Location to store and find tests, defaults to /var/chef/minitest\r\n\r\nUsage\r\n=====\r\n\r\n* The node run list should begin with 'recipe[chef_handler]', 'recipe[minitest-handler]'\r\n* Each cookbook should contain tests in the 'files/default/tests/minitest' directory with a file suffix of '_test.rb'\r\n\r\nMinitest: https://github.com/seattlerb/minitest\r\n\r\nExamples\r\n========\r\n\r\n### Tradition minitest\r\n\r\n    class TestApache2 < MiniTest::Chef::TestCase\r\n      def test_that_the_package_installed\r\n        case node[:platform]\r\n        when \"ubuntu\",\"debian\"\r\n          assert system('apt-cache policy apache2 | grep Installed | grep -v none')\r\n        end\r\n      end\r\n    \r\n      def test_that_the_service_is_running\r\n        assert system('/etc/init.d/apache2 status')\r\n      end\r\n    \r\n      def test_that_the_service_is_enabled\r\n        assert File.exists?(Dir.glob(\"/etc/rc5.d/S*apache2\").first)\r\n      end\r\n    end\r\n\r\n\r\n### Using minitest/spec\r\n\r\n    require 'minitest/spec'\r\n\r\n    describe_recipe 'ark::test' do\r\n\r\n      # It's often convenient to load these includes in a separate\r\n      # helper along with\r\n      # your own helper methods, but here we just include them directly:\r\n      include MiniTest::Chef::Assertions\r\n      include MiniTest::Chef::Context\r\n      include MiniTest::Chef::Resources\r\n\r\n      it \"installed the unzip package\" do\r\n        package(\"unzip\").must_be_installed\r\n      end\r\n\r\n      it \"dumps the correct files into place with correct owner and group\" do\r\n        file(\"/usr/local/foo_dump/foo1.txt\").must_have(:owner, \"foobarbaz\").and(:group, \"foobarbaz\")\r\n      end\r\n\r\n     end\r\n\r\nFor more detailed examples, see [here](https://github.com/calavera/minitest-chef-handler/blob/v0.4.0/examples/spec_examples/files/default/tests/minitest/example_test.rb)\r\n","tagline":"","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}